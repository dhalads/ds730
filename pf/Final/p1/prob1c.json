{"paragraphs":[{"text":"//Problem 1c\n\n/*\nFor Oshkosh, what 7 day period was the hottest? By hottest I mean, the\naverage temperature of all readings from 12:00:00am on day K to\n11:59:59pm on day K+6. For example, April 30th, 2006 to May 6th, 2006\nis a 7 day period. December 29, 2005 to January 4, 2006 is a 7 day\nperiod. Look at all 7 day periods and determine which one is the hottest.\n*/\n\n/*\nYear,Month,Day,TimeCST,TemperatureF,Dew PointF,Humidity,Sea Level PressureIn,VisibilityMPH,Wind Direction,Wind SpeedMPH,Gust SpeedMPH,PrecipitationIn,Events,Conditions,WindDirDegrees\n2000,1,1,12:53 AM,36,30.9,82,29.95,10,SSW,11.5,-,N/A,,Partly Cloudy,200\n2000,1,1,1:53 AM,37,30.9,79,29.96,10,SSW,6.9,-,N/A,,Partly Cloudy,210\n2000,1,1,2:53 AM,36,30,79,29.96,10,SW,5.8,-,N/A,,Partly Cloudy,220\n2000,1,1,3:53 AM,34,28.9,82,29.96,10,Calm,Calm,-,N/A,,Clear,0\n2000,1,1,4:53 AM,28.9,26.1,89,29.97,10,Calm,Calm,-,N/A,,Partly Cloudy,0\n*/\nimport org.apache.spark.sql.expressions._\n\nval weatherW = spark.read.format(\"csv\").option(\"header\", true).option(\"inferSchema\",true).load(\"/user/maria_dev/final/Oshkosh/OshkoshWeather.csv\"\n    ).filter($\"TemperatureF\" > -100 ).select(\"Year\", \"Month\", \"Day\", \"TemperatureF\")\n\nval extraW = weatherW.withColumn(\"dateString\", \n    concat($\"Year\", format_string(\"%02d\", $\"Month\"), format_string(\"%02d\", $\"Day\") )\n    ).withColumn(\"totalSeconds\", \n    unix_timestamp($\"dateString\", \"yyyyMMdd\")\n    ).withColumn(\"dateInt\", \n    $\"dateString\" cast \"Int\"\n    )\n\nval windowSpec = Window.orderBy(\"totalSeconds\").rangeBetween(0,3600*24*7-1)\nval windowSpec2 = Window.orderBy($\"mean_temp\".desc)\n\nval extraW2 = extraW.withColumn(\"mean_temp\", avg(extraW(\"TemperatureF\")).over(windowSpec)\n    // ).filter(col(\"totalSeconds\")<=23*3600+0*60+0\n    ).withColumn(\"dense_rank\", rank().over(windowSpec2))\n\nextraW2.show(false)\n\n// Used to check answer\n// extraW.filter($\"dateInt\" >= 20120630 && $\"dateInt\" <= 20120706).agg(avg(\"TemperatureF\")).show()\n\nval answer = extraW2.filter($\"dense_rank\" <=1).limit(1).withColumn(\"start\",\n    from_unixtime($\"totalSeconds\", \"MMM dd, yyyy\")\n).withColumn(\"end\",\n    from_unixtime($\"totalSeconds\"+3600*24*7-1, \"MMM dd, yyyy\")\n).select(\"start\", \"end\", \"mean_temp\")\nanswer.show()\n\n","user":"anonymous","dateUpdated":"2020-12-15T23:25:46+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.expressions._\nweatherW: org.apache.spark.sql.DataFrame = [Year: int, Month: int ... 2 more fields]\nextraW: org.apache.spark.sql.DataFrame = [Year: int, Month: int ... 5 more fields]\nwindowSpec: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@27883149\nwindowSpec2: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@205d93bd\nextraW2: org.apache.spark.sql.DataFrame = [Year: int, Month: int ... 7 more fields]\n+----+-----+---+------------+----------+------------+--------+-----------------+----------+\n|Year|Month|Day|TemperatureF|dateString|totalSeconds|dateInt |mean_temp        |dense_rank|\n+----+-----+---+------------+----------+------------+--------+-----------------+----------+\n|2012|6    |30 |73.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |72.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |69.1        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |64.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |66.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |70.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |73.9        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |77.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |81.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |84.9        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |86.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |89.1        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |89.1        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |91.9        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |91.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |91.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |90.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |88.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |84.9        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n|2012|6    |30 |79.0        |20120630  |1341014400  |20120630|81.76132596685085|1         |\n+----+-----+---+------------+----------+------------+--------+-----------------+----------+\nonly showing top 20 rows\n\nanswer: org.apache.spark.sql.DataFrame = [start: string, end: string ... 1 more field]\n+------------+------------+-----------------+\n|       start|         end|        mean_temp|\n+------------+------------+-----------------+\n|Jun 30, 2012|Jul 06, 2012|81.76132596685085|\n+------------+------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1608074663318_434145987","id":"20201215-232423_485120547","dateCreated":"2020-12-15T23:24:23+0000","dateStarted":"2020-12-15T23:25:46+0000","dateFinished":"2020-12-15T23:25:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12868"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1608074746351_-994118551","id":"20201215-232546_399760987","dateCreated":"2020-12-15T23:25:46+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:12869"}],"name":"prob1c","id":"2FSYCKTRZ","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}