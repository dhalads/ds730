{"paragraphs":[{"text":"\n/* isd-history.csv\n,USAF,WBAN,STATION NAME,CTRY,STATE,ICAO,LAT,LON,ELEV(M)\n18890,725033,99999,NEW YORK CITY  CENTRAL PARK,US,NY,,40.767,-73.983,27.0\n18922,725060,94728,NEW YORK CENTRAL PARK,US,NY,KNYC,40.779,-73.969,47.5\n25978,999999,14732,NEW YORK LAGUARDIA ARPT,US,NY,KLGA,40.779,-73.88,9.4\n26020,999999,14786,NEW YORK FLOYD BENNE,US,NY,NSC,40.583,-73.883,4.9\n26728,999999,93732,NEW YORK SHOALS AFS,US,NY,,39.8,-72.667,25.9\n26839,999999,94728,NEW YORK CENTRAL PARK ARSNL B,US,NY,KNYC,40.779,-73.969,47.5\n26846,999999,94789,NEW YORK FORT TOTTEN,US,NY,KJFK,40.639,-73.762,6.7\n*/\n\n/* isd-inventory.csv\nStation-Year,ID,USAF,WBAN,YEAR,Last_Updated,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC\n725060-94728-2010,725060-94728,725060,94728,2010,2016-09-09 04:26:19.149296,0,0,0,0,0,0,0,166,174,216,210,217\n725060-94728-2011,725060-94728,725060,94728,2011,2016-09-09 06:10:01.256996,216,196,217,210,217,210,217,217,210,217,210,217\n725060-94728-2012,725060-94728,725060,94728,2012,2016-09-09 08:03:10.963458,217,203,216,209,217,210,216,0,0,0,0,0\n*/\n\n/*\nID,USAF,WBAN,Elevation,Country_Code,Latitude,Longitude,Date,Year,Month,Day,Mean_Temp,Mean_Temp_Count,Mean_Dewpoint,Mean_Dewpoint_Count,Mean_Sea_Level_Pressure,Mean_Sea_Level_Pressure_Count,Mean_Station_Pressure,Mean_Station_Pressure_Count,Mean_Visibility,Mean_Visibility_Count,Mean_Windspeed,Mean_Windspeed_Count,Max_Windspeed,Max_Gust,Max_Temp,Max_Temp_Quality_Flag,Min_Temp,Min_Temp_Quality_Flag,Precipitation,Precip_Flag,Snow_Depth,Fog,Rain_or_Drizzle,Snow_or_Ice,Hail,Thunder,Tornado\n725060-94728,725060,94728,47.5,US,40.779,-73.969,2011-01-01,2011,01,01,44.8,24,31.9,24,1019.4,23,1014.4,24,6.1,24,3.1,24,7.0,,52.0,1,41.0,1,0.00,G,13.0,0,0,0,0,0,0\n725060-94728,725060,94728,47.5,US,40.779,-73.969,2011-01-02,2011,01,02,48.3,24,42.0,24,1013.9,15,1008.9,24,6.2,24,2.4,24,6.0,,51.1,1,44.6,1,0.01,G,11.8,1,1,0,0,0,0\n725060-94728,725060,94728,47.5,US,40.779,-73.969,2011-01-03,2011,01,03,33.7,24,14.6,24,1018.1,24,1013.2,24,10.0,24,8.5,24,13.0,25.1,46.0,1,28.0,1,0.00,I,9.1,0,0,0,0,0,0\n725060-94728,725060,94728,47.5,US,40.779,-73.969,2011-01-04,2011,01,04,33.9,24,15.0,24,1016.1,24,1011.1,24,9.9,24,5.6,24,8.9,15.9,39.9,1,30.9,1,0.00,G,5.9,0,0,0,0,0,0\n*/\n\n/*\nvendor_id,pickup_datetime,dropoff_datetime,passenger_count,trip_distance,pickup_longitude,pickup_latitude,rate_code,store_and_fwd_flag,dropoff_longitude,dropoff_latitude,payment_type,fare_amount,surcharge,mta_tax,tip_amount,tolls_amount,total_amount\n\nCMT,2011-06-15 17:50:28,2011-06-15 18:11:32,1,1.1000000000000001,-73.967978000000002,40.753256,1,N,-73.983118000000005,40.756233000000002,CSH,10.9,1,0.5,0,0,12.4\nCMT,2011-06-16 15:24:41,2011-06-16 15:28:41,1,0.69999999999999996,-73.999369000000002,40.739030999999997,1,N,-74.001597000000004,40.729320000000001,CSH,4.5,0,0.5,0,0,5\nCMT,2011-06-15 22:46:41,2011-06-15 22:49:09,0,0.59999999999999998,-74.004099999999994,40.747799999999998,1,N,-73.997799999999998,40.756500000000003,CSH,4.0999999999999996,0.5,0.5,0,0,5.0999999999999996\n*/\n\nval start = System.currentTimeMillis()\n\n// val weatherLocation = \"/user/maria_dev/finalp3/725060-94728.csv\"\n// val taxiLocation = \"/user/maria_dev/finalp3/taxi_test.csv\"\n\n// val taxiLocation = \"/user/maria_dev/finalp3/yellow_tripdata_2011-06.csv\"\n\n\n//s3 locations\n\nval weatherLocation = \"s3://halama1668/finalp3/725060-94728.csv\"\nval taxiLocation = \"s3://halama1668/finalp3/yellow_tripdata_2011-06.csv\"\n\n\n\nval weather = spark.read.format(\"csv\").option(\"header\", true).option(\"inferSchema\",true).load(weatherLocation\n    ).select(\"Date\", \"Year\", \"Month\", \"Day\",\"Mean_Temp\",\"Precipitation\",\"Precip_Flag\",\"Snow_Depth\",\"Fog\",\"Rain_or_Drizzle\",\"Snow_or_Ice\",\"Hail\",\"Thunder\",\"Tornado\"\n    ).withColumn(\"Date\", \n    to_date($\"Date\", \"yyyy-MM-dd\")\n    )\n\n\nval taxi = spark.read.format(\"csv\").option(\"header\", true).option(\"inferSchema\",true).load(taxiLocation\n    ).filter($\"passenger_count\" >= 1 && $\"fare_amount\" > 0\n    ).select(\"pickup_datetime\", \"passenger_count\", \"fare_amount\",\"tip_amount\", \"total_amount\"\n    ).withColumn(\"timestamp\", \n    unix_timestamp($\"pickup_datetime\", \"yyyy-MM-dd HH:mm:ss\")\n    ).withColumn(\"Date\", \n    to_date($\"pickup_datetime\", \"yyyy-MM-dd HH:mm:ss\")\n    )\n\nval join = taxi.alias(\"a\").join(weather.alias(\"b\"), \"Date\")\n\nval agg1 = join.groupBy(\"Rain_or_Drizzle\").agg(\n    count(\"Date\").as(\"numberTrips\"),\n    mean(\"passenger_count\").as(\"meanPass\"),\n    mean(\"fare_amount\").as(\"meanFare\"),\n    (sum(\"tip_amount\")/sum(\"fare_amount\")).as(\"tipFareRatio\")\n    )\n\nval dayCount = join.select(\"Rain_or_Drizzle\", \"Date\").distinct().groupBy(\"Rain_or_Drizzle\").agg(count(\"Rain_or_Drizzle\").as(\"dayCount\"))\n\nval join2 = dayCount.join(agg1, \"Rain_or_Drizzle\").withColumn(\"tripsPerDay\",\n    $\"numberTrips\"/$\"dayCount\"\n    ).select(\"Rain_or_Drizzle\",\"tripsPerDay\",\"meanPass\",\"meanFare\",\"tipFareRatio\")\n\nval rainData = join2.filter($\"Rain_or_Drizzle\" === 1).select(\n    col(\"tripsPerDay\").as(\"tripsPerDayRain\"),\n    col(\"meanPass\").as(\"meanPassRain\"),\n    col(\"meanFare\").as(\"meanFareRain\"),\n    col(\"tipFareRatio\").as(\"tipFareRatioRain\")\n    ).withColumn(\"joinCol\", lit(\"1\"))\n\nval noRainData = join2.filter($\"Rain_or_Drizzle\" === 0).select(\n    \"tripsPerDay\",\"meanPass\",\"meanFare\",\"tipFareRatio\"\n    ).withColumn(\"joinCol\", lit(\"1\"))\n\n//val changeData = rainData.alias(\"a\").join(noRainData.alias(\"b\"), col(\"a.joinCol\") === col(\"b.joinCol\"), \"inner\")\n\n// val changeData = rainData.crossJoin(noRainData);\n\n// changeData.show()\n\njoin2.show()\n\nval end = System.currentTimeMillis()\n\nval total = end -start\n\nSystem.out.println(\"total=\" + total)\n","user":"anonymous","dateUpdated":"2020-12-16T02:14:22+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------+-----------------+------------------+------------------+-------------------+\n|Rain_or_Drizzle|      tripsPerDay|          meanPass|          meanFare|       tipFareRatio|\n+---------------+-----------------+------------------+------------------+-------------------+\n|              1|504487.2727272727|1.6618756036732163|  10.4286424452552|0.09558045416001587|\n|              0|489987.5263157895|1.6660656130558855|10.381674532423949| 0.0936529320767545|\n+---------------+-----------------+------------------+------------------+-------------------+\n\ntotal=147568\nstart: Long = 1608084862805\nweatherLocation: String = s3://halama1668/finalp3/725060-94728.csv\ntaxiLocation: String = s3://halama1668/finalp3/yellow_tripdata_2011-06.csv\nweather: org.apache.spark.sql.DataFrame = [Date: date, Year: int ... 12 more fields]\ntaxi: org.apache.spark.sql.DataFrame = [pickup_datetime: timestamp, passenger_count: int ... 5 more fields]\njoin: org.apache.spark.sql.DataFrame = [Date: date, pickup_datetime: timestamp ... 18 more fields]\nagg1: org.apache.spark.sql.DataFrame = [Rain_or_Drizzle: int, numberTrips: bigint ... 3 more fields]\ndayCount: org.apache.spark.sql.DataFrame = [Rain_or_Drizzle: int, dayCount: bigint]\njoin2: org.apache.spark.sql.DataFrame = [Rain_or_Drizzle: int, tripsPerDay: double ... 3 more fields]\nrainData: org.apache.spark.sql.DataFrame = [trip..."}]},"apps":[],"jobName":"paragraph_1608084858574_-2092064684","id":"20201215-193638_940631407","dateCreated":"2020-12-16T02:14:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:765","dateFinished":"2020-12-16T02:16:50+0000","dateStarted":"2020-12-16T02:14:22+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=30","http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=31","http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=32","http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=33","http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=35","http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=36","http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=37","http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=38","http://ip-172-31-3-149.ec2.internal:4040/jobs/job?id=39"],"interpreterSettingId":"spark"}}},{"user":"anonymous","dateUpdated":"2020-12-16T02:14:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1608084858575_-1093936752","id":"20201215-193720_1094455771","dateCreated":"2020-12-16T02:14:18+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:766"}],"name":"prob3d","id":"2FSVW8WYF","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}